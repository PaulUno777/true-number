/* DO NOT EDIT, file generated by nestjs-i18n */

/* eslint-disable */
/* prettier-ignore */
import { Path } from "nestjs-i18n";
/* prettier-ignore */
export type I18nTranslations = {
    "auth": {
        "userExists": string;
        "invalidCredentials": string;
        "accountCreated": string;
        "loginSuccess": string;
        "logoutSuccess": string;
        "tokenRefreshed": string;
        "invalidRefreshToken": string;
        "unauthorized": string;
    };
    "common": {
        "errors": {
            "badRequest": string;
            "unauthorized": string;
            "forbidden": string;
            "notFound": string;
            "conflict": string;
            "internalServerError": string;
            "validationFailed": string;
        };
        "success": {
            "operationSuccessful": string;
            "dataRetrieved": string;
            "dataCreated": string;
            "dataUpdated": string;
            "dataDeleted": string;
        };
    };
    "game": {
        "gameWon": string;
        "gameLost": string;
        "balanceUpdated": string;
        "historyRetrieved": string;
        "gameCreated": string;
        "gameJoined": string;
        "turnPlayed": string;
        "waitingGamesRetrieved": string;
        "gameDetailsRetrieved": string;
        "userGamesRetrieved": string;
        "gameNotFound": string;
        "gameNotWaiting": string;
        "cannotJoinOwnGame": string;
        "gameFull": string;
        "gameNotInProgress": string;
        "notParticipant": string;
        "alreadyPlayed": string;
        "insufficientBalance": string;
        "statsRetrieved": string;
        "lastGameRetrieved": string;
        "activeGameRetrieved": string;
        "gameLeft": string;
        "alreadyHasActiveGame": string;
        "notYourTurn": string;
        "multiplayerGameWon": string;
        "multiplayerGameLost": string;
        "multiplayerForfeitWin": string;
        "gameStarted": string;
        "timeUp": string;
        "leavePenalty": string;
        "leftWithPenalty": string;
        "timeoutForfeit": string;
        "forfeitedByTimeout": string;
        "solo": {
            "exactMatch": string;
            "higher": string;
            "lower": string;
            "historyRetrieved": string;
            "statsRetrieved": string;
        };
    };
    "user": {
        "userCreated": string;
        "userUpdated": string;
        "userDeleted": string;
        "userNotFound": string;
        "profileRetrieved": string;
    };
    "validation": {
        "emailRequired": string;
        "emailInvalid": string;
        "passwordRequired": string;
        "passwordMinLength": string;
        "usernameRequired": string;
        "usernameMinLength": string;
        "phoneRequired": string;
        "phoneInvalid": string;
        "validLogin": string;
        "stringRequired": string;
    };
};
/* prettier-ignore */
export type I18nPath = Path<I18nTranslations>;
